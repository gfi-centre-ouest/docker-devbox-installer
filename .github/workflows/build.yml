name: build
on:
  push: ~
  pull_request: ~
jobs:
  ci:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest', 'macos-latest' ]

    steps:
      - name: Setup python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Checkout
        uses: actions/checkout@v2

      - name: Git User config
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "github-actions"

      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0

      - name: Install dependencies
        run: poetry install

      - name: Pylint
        run: poetry run pylint docker_devbox_installer stepbystep

      - name: Pytest with coverage
        if: matrix.os == 'ubuntu-latest'
        run: poetry run coverage run --source=docker_devbox_installer,stepbystep -m pytest

      - name: Pytest without coverage
        if: matrix.os != 'ubuntu-latest'
        run: poetry run pytest

      - name: Poetry build
        run: poetry build

      - name: Pyinstaller build
        run: poetry run pyinstaller --clean -y --dist ./dist docker-devbox-installer.spec

      - uses: actions/upload-artifact@v2
        with:
          name: dist-${{ matrix.os }}
          path: dist/

      - name: Coveralls
        if: matrix.os == 'ubuntu-latest'
        run: poetry run coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

  commitlint:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v2
